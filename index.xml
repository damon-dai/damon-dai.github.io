<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Damon的博客</title>
    <link>https://damon-dai.github.io/</link>
    <description>Recent content on Damon的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 10 May 2022 18:06:17 +0800</lastBuildDate><atom:link href="https://damon-dai.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从0到1，学习订单管理体系</title>
      <link>https://damon-dai.github.io/post/%E4%BB%8E0%E5%88%B01%E5%AD%A6%E4%B9%A0%E8%AE%A2%E5%8D%95%E7%AE%A1%E7%90%86%E4%BD%93%E7%B3%BB/</link>
      <pubDate>Tue, 10 May 2022 18:06:17 +0800</pubDate>
      
      <guid>https://damon-dai.github.io/post/%E4%BB%8E0%E5%88%B01%E5%AD%A6%E4%B9%A0%E8%AE%A2%E5%8D%95%E7%AE%A1%E7%90%86%E4%BD%93%E7%B3%BB/</guid>
      <description>订单系统是看似简单，实际上是一个逻辑复杂的系统，具体的流程设计，应与自身的业务紧密结合，同时涉及到与其他各大系统的紧密配合，需要不断的去优化，让各个系统的配合更加流畅多样。 一、概述 接受客户订单信息，以及仓储管理系统发来的库存信息，然后按客户和紧要程度给订单归类，对不同仓储地点的库</description>
    </item>
    
    <item>
      <title>数据一致性及tcc的简单介绍</title>
      <link>https://damon-dai.github.io/post/tcc%E4%B8%80%E8%87%B4%E6%80%A7/</link>
      <pubDate>Tue, 10 May 2022 16:07:07 +0800</pubDate>
      
      <guid>https://damon-dai.github.io/post/tcc%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
      <description>对于业务数据，什么是正确的状态。 一般来说业务数据的正确状态是有限的几种状态。 例如订单，包含数个到数十个字段。有这样几个：未支付，已支付，已发货。。。 其实代码逻辑对订单数据的操作也无非是 从一个正确的状态转换到另外一个正确的状态。 例如，从未支付-&amp;gt;已经支付。 当然，有些转化根据业</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://damon-dai.github.io/about/</link>
      <pubDate>Tue, 10 Mar 2015 00:13:27 +0000</pubDate>
      
      <guid>https://damon-dai.github.io/about/</guid>
      <description>代码搬运工</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://damon-dai.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://damon-dai.github.io/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://damon-dai.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://damon-dai.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
